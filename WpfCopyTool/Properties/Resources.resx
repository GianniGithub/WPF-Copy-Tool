<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="FastCopy" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\FastCopy.exe;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAS0AAAAZCAYAAABkf3jhAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAt8aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0MiA3OS4x
        NjA5MjQsIDIwMTcvMDcvMTMtMDE6MDY6MzkgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0
        cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24g
        cmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4
        bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIg
        eG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50
        IyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczpkYz0iaHR0cDov
        L3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2Jl
        LmNvbS9waG90b3Nob3AvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjY0MkIz
        MTUzOTY3NEU0MTFCMDBBQkRDNTZDMDkyQ0M4IiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpw
        aG90b3Nob3A6MGMxMzNlNWItMTkyNy0xNzRiLThhNzAtYzk4OTdlNmQ1OTE0IiB4bXBNTTpJbnN0YW5j
        ZUlEPSJ4bXAuaWlkOmNjY2QzNjFhLTU4YjktY2E0ZC1iZmY0LTlkZDdiMzg2ZGNlOCIgeG1wOkNyZWF0
        b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTgt
        MDktMTFUMTA6Mjg6MTgrMDI6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE4LTA5LTExVDExOjAyOjI0KzAy
        OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDE4LTA5LTExVDExOjAyOjI0KzAyOjAwIiBkYzpmb3JtYXQ9
        ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNS
        R0IgSUVDNjE5NjYtMi4xIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5p
        aWQ6NTYxNzRmOGItZGY2Yi1hZTQzLTljZmItMzY2YTRlYTc3Mzk2IiBzdFJlZjpkb2N1bWVudElEPSJh
        ZG9iZTpkb2NpZDpwaG90b3Nob3A6NmJlZTRhODQtNjhlYy0xYjQwLWExODYtYmQ5ZWM1YjljOTQzIiBz
        dFJlZjpvcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NjQyQjMxNTM5Njc0RTQxMUIwMEFCREM1NkMw
        OTJDQzgiLz4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2
        ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NDZjM2MyN2MtN2U3Yy0wZTQ1LWJiOTUtM2FkZDFj
        MjI2MGZkIiBzdEV2dDp3aGVuPSIyMDE4LTA5LTExVDEwOjUzOjQ5KzAyOjAwIiBzdEV2dDpzb2Z0d2Fy
        ZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOCAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8i
        Lz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNvbnZlcnRlZCIgc3RFdnQ6cGFyYW1ldGVycz0iZnJvbSBp
        bWFnZS9wbmcgdG8gYXBwbGljYXRpb24vdm5kLmFkb2JlLnBob3Rvc2hvcCIvPiA8cmRmOmxpIHN0RXZ0
        OmFjdGlvbj0iZGVyaXZlZCIgc3RFdnQ6cGFyYW1ldGVycz0iY29udmVydGVkIGZyb20gaW1hZ2UvcG5n
        IHRvIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249
        InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjkxMjhmZGJlLTA3NGItNmM0NC1iZDlkLTBl
        YmYwOGViM2IxOSIgc3RFdnQ6d2hlbj0iMjAxOC0wOS0xMVQxMDo1Mzo0OSswMjowMCIgc3RFdnQ6c29m
        dHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTggKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2Vk
        PSIvIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlp
        ZDo1NjE3NGY4Yi1kZjZiLWFlNDMtOWNmYi0zNjZhNGVhNzczOTYiIHN0RXZ0OndoZW49IjIwMTgtMDkt
        MTFUMTE6MDI6MjQrMDI6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDQyAy
        MDE4IChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY29u
        dmVydGVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3No
        b3AgdG8gaW1hZ2UvcG5nIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJkZXJpdmVkIiBzdEV2dDpwYXJh
        bWV0ZXJzPSJjb252ZXJ0ZWQgZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGlt
        YWdlL3BuZyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9Inht
        cC5paWQ6Y2NjZDM2MWEtNThiOS1jYTRkLWJmZjQtOWRkN2IzODZkY2U4IiBzdEV2dDp3aGVuPSIyMDE4
        LTA5LTExVDExOjAyOjI0KzAyOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3Ag
        Q0MgMjAxOCAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhp
        c3Rvcnk+IDxwaG90b3Nob3A6VGV4dExheWVycz4gPHJkZjpCYWc+IDxyZGY6bGkgcGhvdG9zaG9wOkxh
        eWVyTmFtZT0iVERLIEVsZWN0cm9uaWNzIEFHIiBwaG90b3Nob3A6TGF5ZXJUZXh0PSJUREsgRWxlY3Ry
        b25pY3MgQUciLz4gPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSJUREsgRWxlY3Ryb25pY3MgQUcg
        LSByZWd1bGFyIiBwaG90b3Nob3A6TGF5ZXJUZXh0PSJUREsgRWxlY3Ryb25pY3MgQUciLz4gPC9yZGY6
        QmFnPiA8L3Bob3Rvc2hvcDpUZXh0TGF5ZXJzPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8
        L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PkQGYvwAAAo+SURBVHhe7Z1brHXXFMc/NJSKRCTK
        g4bPC0KohsQtaakKHtxSCYI+iRdJW20+cU1c60mIkLokEl5UBEGExjWRirZe8EAIEbcEH3Wn5fj/jvM/
        GWd8Y8419+Xbzqo1kl/2WXOOMeZce84x9pxrr7XPiROXfXKKR4g3i3+JvQ7Uo4d+5cdUtrtgG23/UfxM
        fE28RzxX3FPkc6yo/JlKv8VdxDtF5ccwFleJfZu9vb2FhTsNOSAqviguFi8RrcRFOfXofUlUfkxlvwvO
        VtskMhLYg0Q+10hlayr9iruJD4vKh/mbuFwc2lUDv7AwV2JAVDxHEAgkI46rxOWERT16lGEX/USi7S45
        223/WbxasBLK5zzVdqWfOVd8SlT25nfiKeKIbTXwCwtz5cjkTtxD/EgQDE5aEBNXTFjgpIUd9i6POMB2
        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
</value>
  </data>
</root>